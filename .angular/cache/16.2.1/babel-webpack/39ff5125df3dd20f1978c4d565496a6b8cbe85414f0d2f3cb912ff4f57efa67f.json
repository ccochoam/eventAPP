{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/event.service\";\nimport * as i2 from \"@angular/forms\";\nexport class EventAddComponent {\n  constructor(eventService) {\n    this.eventService = eventService;\n    this.event = {};\n  }\n  addEvent() {\n    this.eventService.saveEvent(this.event).subscribe(response => {\n      console.log('Evento guardado exitosamente', response);\n      // Puedes redirigir al usuario a una página de éxito o realizar otras acciones después de guardar el evento.\n    }, error => {\n      console.error('Error al guardar el evento', error);\n      // Puedes manejar el error y mostrar un mensaje al usuario en caso de fallo.\n    });\n  }\n}\n_class = EventAddComponent;\n_class.ɵfac = function EventAddComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.EventService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-event-add\"]],\n  decls: 19,\n  vars: 2,\n  consts: [[1, \"container\"], [3, \"ngSubmit\"], [\"eventoForm\", \"ngForm\"], [1, \"form-group\"], [\"for\", \"descriptionEvent\"], [\"type\", \"text\", \"id\", \"descriptionEvent\", \"name\", \"descriptionEvent\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"tipoEvento\"], [\"id\", \"tipoEvento\", \"name\", \"tipoEvento\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"value\", \"1\"], [\"value\", \"2\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"]],\n  template: function EventAddComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n      i0.ɵɵtext(2, \"Agregar Evento\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"form\", 1, 2);\n      i0.ɵɵlistener(\"ngSubmit\", function EventAddComponent_Template_form_ngSubmit_3_listener() {\n        return ctx.addEvent();\n      });\n      i0.ɵɵelementStart(5, \"div\", 3)(6, \"label\", 4);\n      i0.ɵɵtext(7, \"Descripci\\u00F3n:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"input\", 5);\n      i0.ɵɵlistener(\"ngModelChange\", function EventAddComponent_Template_input_ngModelChange_8_listener($event) {\n        return ctx.evento.descriptionEvent = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"div\", 3)(10, \"label\", 6);\n      i0.ɵɵtext(11, \"Tipo de Evento:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"select\", 7);\n      i0.ɵɵlistener(\"ngModelChange\", function EventAddComponent_Template_select_ngModelChange_12_listener($event) {\n        return ctx.evento.tipoEvento = $event;\n      });\n      i0.ɵɵelementStart(13, \"option\", 8);\n      i0.ɵɵtext(14, \"Compra\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"option\", 9);\n      i0.ɵɵtext(16, \"Venta\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(17, \"button\", 10);\n      i0.ɵɵtext(18, \"Guardar Evento\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngModel\", ctx.evento.descriptionEvent);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.evento.tipoEvento);\n    }\n  },\n  dependencies: [i2.ɵNgNoValidate, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2.DefaultValueAccessor, i2.SelectControlValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.NgModel, i2.NgForm],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["EventAddComponent","constructor","eventService","event","addEvent","saveEvent","subscribe","response","console","log","error","i0","ɵɵdirectiveInject","i1","EventService","selectors","decls","vars","consts","template","EventAddComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","EventAddComponent_Template_form_ngSubmit_3_listener","EventAddComponent_Template_input_ngModelChange_8_listener","$event","evento","descriptionEvent","EventAddComponent_Template_select_ngModelChange_12_listener","tipoEvento","ɵɵadvance","ɵɵproperty"],"sources":["D:\\proyectos\\finaktiva\\LogApp\\src\\app\\event-add\\event-add.component.ts","D:\\proyectos\\finaktiva\\LogApp\\src\\app\\event-add\\event-add.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { EventService } from 'src/app/event.service'\n\n@Component({\n  selector: 'app-event-add',\n  templateUrl: './event-add.component.html',\n  styleUrls: ['./event-add.component.css']\n})\nexport class EventAddComponent {\n  event: any = {};\n\n  constructor(private eventService: EventService) { }\n\n  addEvent() {\n    this.eventService.saveEvent(this.event).subscribe(\n      (response) => {\n        console.log('Evento guardado exitosamente', response);\n        // Puedes redirigir al usuario a una página de éxito o realizar otras acciones después de guardar el evento.\n      },\n      (error) => {\n        console.error('Error al guardar el evento', error);\n        // Puedes manejar el error y mostrar un mensaje al usuario en caso de fallo.\n      }\n    );\n  }\n}\n","<div class=\"container\">\n    <h2>Agregar Evento</h2>\n    <form (ngSubmit)=\"addEvent()\" #eventoForm=\"ngForm\">\n        <div class=\"form-group\">\n            <label for=\"descriptionEvent\">Descripción:</label>\n            <input type=\"text\" id=\"descriptionEvent\" name=\"descriptionEvent\" [(ngModel)]=\"evento.descriptionEvent\" class=\"form-control\" required>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"tipoEvento\">Tipo de Evento:</label>\n            <select id=\"tipoEvento\" name=\"tipoEvento\" [(ngModel)]=\"evento.tipoEvento\" class=\"form-control\" required>\n                <option value=\"1\">Compra</option>\n                <option value=\"2\">Venta</option>\n            </select>\n        </div>\n        <button type=\"submit\" class=\"btn btn-primary\">Guardar Evento</button>\n    </form>\n</div>\n"],"mappings":";;;;AAQA,OAAM,MAAOA,iBAAiB;EAG5BC,YAAoBC,YAA0B;IAA1B,KAAAA,YAAY,GAAZA,YAAY;IAFhC,KAAAC,KAAK,GAAQ,EAAE;EAEmC;EAElDC,QAAQA,CAAA;IACN,IAAI,CAACF,YAAY,CAACG,SAAS,CAAC,IAAI,CAACF,KAAK,CAAC,CAACG,SAAS,CAC9CC,QAAQ,IAAI;MACXC,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEF,QAAQ,CAAC;MACrD;IACF,CAAC,EACAG,KAAK,IAAI;MACRF,OAAO,CAACE,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MAClD;IACF,CAAC,CACF;EACH;;SAhBWV,iBAAiB;;mBAAjBA,MAAiB,EAAAW,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,YAAA;AAAA;;QAAjBd,MAAiB;EAAAe,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,2BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCR9BV,EAAA,CAAAY,cAAA,aAAuB;MACfZ,EAAA,CAAAa,MAAA,qBAAc;MAAAb,EAAA,CAAAc,YAAA,EAAK;MACvBd,EAAA,CAAAY,cAAA,iBAAmD;MAA7CZ,EAAA,CAAAe,UAAA,sBAAAC,oDAAA;QAAA,OAAYL,GAAA,CAAAlB,QAAA,EAAU;MAAA,EAAC;MACzBO,EAAA,CAAAY,cAAA,aAAwB;MACUZ,EAAA,CAAAa,MAAA,wBAAY;MAAAb,EAAA,CAAAc,YAAA,EAAQ;MAClDd,EAAA,CAAAY,cAAA,eAAqI;MAApEZ,EAAA,CAAAe,UAAA,2BAAAE,0DAAAC,MAAA;QAAA,OAAAP,GAAA,CAAAQ,MAAA,CAAAC,gBAAA,GAAAF,MAAA;MAAA,EAAqC;MAAtGlB,EAAA,CAAAc,YAAA,EAAqI;MAEzId,EAAA,CAAAY,cAAA,aAAwB;MACIZ,EAAA,CAAAa,MAAA,uBAAe;MAAAb,EAAA,CAAAc,YAAA,EAAQ;MAC/Cd,EAAA,CAAAY,cAAA,iBAAwG;MAA9DZ,EAAA,CAAAe,UAAA,2BAAAM,4DAAAH,MAAA;QAAA,OAAAP,GAAA,CAAAQ,MAAA,CAAAG,UAAA,GAAAJ,MAAA;MAAA,EAA+B;MACrElB,EAAA,CAAAY,cAAA,iBAAkB;MAAAZ,EAAA,CAAAa,MAAA,cAAM;MAAAb,EAAA,CAAAc,YAAA,EAAS;MACjCd,EAAA,CAAAY,cAAA,iBAAkB;MAAAZ,EAAA,CAAAa,MAAA,aAAK;MAAAb,EAAA,CAAAc,YAAA,EAAS;MAGxCd,EAAA,CAAAY,cAAA,kBAA8C;MAAAZ,EAAA,CAAAa,MAAA,sBAAc;MAAAb,EAAA,CAAAc,YAAA,EAAS;;;MATAd,EAAA,CAAAuB,SAAA,GAAqC;MAArCvB,EAAA,CAAAwB,UAAA,YAAAb,GAAA,CAAAQ,MAAA,CAAAC,gBAAA,CAAqC;MAI5DpB,EAAA,CAAAuB,SAAA,GAA+B;MAA/BvB,EAAA,CAAAwB,UAAA,YAAAb,GAAA,CAAAQ,MAAA,CAAAG,UAAA,CAA+B"},"metadata":{},"sourceType":"module","externalDependencies":[]}