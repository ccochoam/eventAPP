{"ast":null,"code":"var _class;\nimport { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class EventService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'https://localhost:44390/api'; // Reemplaza con la URL de tu backend\n  }\n\n  getEvents() {\n    return this.http.get(`${this.baseUrl}/eventLog`);\n  }\n  saveEvent(event) {\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json'\n    });\n    return this.http.post(`${this.baseUrl}/eventLog`, event, {\n      headers\n    });\n  }\n}\n_class = EventService;\n_class.ɵfac = function EventService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["HttpHeaders","EventService","constructor","http","baseUrl","getEvents","get","saveEvent","event","headers","post","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["D:\\proyectos\\finaktiva\\LogApp\\src\\app\\event.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EventService {\n  private baseUrl = 'https://localhost:44390/api'; // Reemplaza con la URL de tu backend\n\n  constructor(private http: HttpClient) { }\n\n  getEvents(): Observable<any[]> {\n    return this.http.get<any[]>(`${this.baseUrl}/eventLog`);\n  }\n\n  saveEvent(event: any): Observable<any> {\n    const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n    return this.http.post(`${this.baseUrl}/eventLog`, event, { headers });\n  }\n}\n"],"mappings":";AACA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAM9D,OAAM,MAAOC,YAAY;EAGvBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,OAAO,GAAG,6BAA6B,CAAC,CAAC;EAET;;EAExCC,SAASA,CAAA;IACP,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAQ,GAAG,IAAI,CAACF,OAAO,WAAW,CAAC;EACzD;EAEAG,SAASA,CAACC,KAAU;IAClB,MAAMC,OAAO,GAAG,IAAIT,WAAW,CAAC;MAAE,cAAc,EAAE;IAAkB,CAAE,CAAC;IACvE,OAAO,IAAI,CAACG,IAAI,CAACO,IAAI,CAAC,GAAG,IAAI,CAACN,OAAO,WAAW,EAAEI,KAAK,EAAE;MAAEC;IAAO,CAAE,CAAC;EACvE;;SAZWR,YAAY;;mBAAZA,MAAY,EAAAU,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAZb,MAAY;EAAAc,OAAA,EAAZd,MAAY,CAAAe,IAAA;EAAAC,UAAA,EAFX;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}