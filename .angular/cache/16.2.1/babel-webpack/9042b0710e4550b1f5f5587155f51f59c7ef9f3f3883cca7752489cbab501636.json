{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/event.service\";\nimport * as i2 from \"@angular/common\";\nfunction EventListComponent_tr_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"td\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"td\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const event_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(3, 3, event_r1.dateEvent, \"dd/MM/yyyy\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(event_r1.typeEvent);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(event_r1.descriptionEvent);\n  }\n}\nexport class EventListComponent {\n  constructor(eventService) {\n    this.eventService = eventService;\n    this.events = []; // Suponiendo que tienes un arreglo de eventos\n  }\n\n  ngOnInit() {\n    this.getEvents(); // Llama a la función para cargar eventos al inicializar el componente\n  }\n\n  getEvents() {\n    this.eventService.getEvents().subscribe(data => {\n      this.events = data; // Asigna los datos recibidos a la propiedad events\n    });\n  }\n}\n_class = EventListComponent;\n_class.ɵfac = function EventListComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.EventService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-event-list\"]],\n  decls: 9,\n  vars: 1,\n  consts: [[4, \"ngFor\", \"ngForOf\"]],\n  template: function EventListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"table\")(1, \"tr\")(2, \"th\");\n      i0.ɵɵtext(3, \"Fecha\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"th\");\n      i0.ɵɵtext(5, \"Tipo\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"th\");\n      i0.ɵɵtext(7, \"Descripci\\u00F3n\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(8, EventListComponent_tr_8_Template, 8, 6, \"tr\", 0);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngForOf\", ctx.events);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.DatePipe],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ɵɵpipeBind2","event_r1","dateEvent","typeEvent","descriptionEvent","EventListComponent","constructor","eventService","events","ngOnInit","getEvents","subscribe","data","ɵɵdirectiveInject","i1","EventService","selectors","decls","vars","consts","template","EventListComponent_Template","rf","ctx","ɵɵtemplate","EventListComponent_tr_8_Template","ɵɵproperty"],"sources":["D:\\proyectos\\finaktiva\\LogApp\\src\\app\\event-list\\event-list.component.ts","D:\\proyectos\\finaktiva\\LogApp\\src\\app\\event-list\\event-list.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { EventService } from 'src/app/event.service'\n\n@Component({\n  selector: 'app-event-list',\n  templateUrl: './event-list.component.html',\n  styleUrls: ['./event-list.component.css']\n})\nexport class EventListComponent implements OnInit {\n  events: any[] = []; // Suponiendo que tienes un arreglo de eventos\n\n  constructor(private eventService: EventService) {}\n\n  ngOnInit(): void {\n    this.getEvents(); // Llama a la función para cargar eventos al inicializar el componente\n  }\n\n  getEvents(): void {\n    this.eventService.getEvents().subscribe((data) => {\n      this.events = data; // Asigna los datos recibidos a la propiedad events\n    });\n  }\n}\n","<table>\n    <tr>\n        <th>Fecha</th>\n        <th>Tipo</th>\n        <th>Descripción</th>\n    </tr>\n    <tr *ngFor=\"let event of events\">\n        <td>{{ event.dateEvent | date: 'dd/MM/yyyy'}}</td>\n        <td>{{ event.typeEvent }}</td>\n        <td>{{ event.descriptionEvent }}</td>\n    </tr>\n</table>\n"],"mappings":";;;;;;ICMIA,EAAA,CAAAC,cAAA,SAAiC;IACzBD,EAAA,CAAAE,MAAA,GAAyC;;IAAAF,EAAA,CAAAG,YAAA,EAAK;IAClDH,EAAA,CAAAC,cAAA,SAAI;IAAAD,EAAA,CAAAE,MAAA,GAAqB;IAAAF,EAAA,CAAAG,YAAA,EAAK;IAC9BH,EAAA,CAAAC,cAAA,SAAI;IAAAD,EAAA,CAAAE,MAAA,GAA4B;IAAAF,EAAA,CAAAG,YAAA,EAAK;;;;IAFjCH,EAAA,CAAAI,SAAA,GAAyC;IAAzCJ,EAAA,CAAAK,iBAAA,CAAAL,EAAA,CAAAM,WAAA,OAAAC,QAAA,CAAAC,SAAA,gBAAyC;IACzCR,EAAA,CAAAI,SAAA,GAAqB;IAArBJ,EAAA,CAAAK,iBAAA,CAAAE,QAAA,CAAAE,SAAA,CAAqB;IACrBT,EAAA,CAAAI,SAAA,GAA4B;IAA5BJ,EAAA,CAAAK,iBAAA,CAAAE,QAAA,CAAAG,gBAAA,CAA4B;;;ADDxC,OAAM,MAAOC,kBAAkB;EAG7BC,YAAoBC,YAA0B;IAA1B,KAAAA,YAAY,GAAZA,YAAY;IAFhC,KAAAC,MAAM,GAAU,EAAE,CAAC,CAAC;EAE6B;;EAEjDC,QAAQA,CAAA;IACN,IAAI,CAACC,SAAS,EAAE,CAAC,CAAC;EACpB;;EAEAA,SAASA,CAAA;IACP,IAAI,CAACH,YAAY,CAACG,SAAS,EAAE,CAACC,SAAS,CAAEC,IAAI,IAAI;MAC/C,IAAI,CAACJ,MAAM,GAAGI,IAAI,CAAC,CAAC;IACtB,CAAC,CAAC;EACJ;;SAbWP,kBAAkB;;mBAAlBA,MAAkB,EAAAX,EAAA,CAAAmB,iBAAA,CAAAC,EAAA,CAAAC,YAAA;AAAA;;QAAlBV,MAAkB;EAAAW,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,4BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCR/B5B,EAAA,CAAAC,cAAA,YAAO;MAEKD,EAAA,CAAAE,MAAA,YAAK;MAAAF,EAAA,CAAAG,YAAA,EAAK;MACdH,EAAA,CAAAC,cAAA,SAAI;MAAAD,EAAA,CAAAE,MAAA,WAAI;MAAAF,EAAA,CAAAG,YAAA,EAAK;MACbH,EAAA,CAAAC,cAAA,SAAI;MAAAD,EAAA,CAAAE,MAAA,uBAAW;MAAAF,EAAA,CAAAG,YAAA,EAAK;MAExBH,EAAA,CAAA8B,UAAA,IAAAC,gCAAA,gBAIK;MACT/B,EAAA,CAAAG,YAAA,EAAQ;;;MALkBH,EAAA,CAAAI,SAAA,GAAS;MAATJ,EAAA,CAAAgC,UAAA,YAAAH,GAAA,CAAAf,MAAA,CAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}